image: php:latest

cache:
  paths:
    - ./vendor/

services:
  - mysql:latest
  - nginx:latest

variables:
  MYSQL_ROOT_PASSWORD: Et2jM3l8nA6r4bak
  MYSQL_USER: symfony
  MYSQL_PASSWORD: symfony
  MYSQL_DATABASE: symfony
  APP_ENV: dev
  APP_DEBUG: "1"
  APP_SECRET: ThisIsATestSecret

before_script:
  - apt-get update --yes
  - apt-get install zip unzip --yes
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php -r "if (hash_file('SHA384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  - php composer-setup.php
  - ls -al
  - mv composer.phar /usr/local/bin/composer
  - php -r "unlink('composer-setup.php');"
  - composer install --no-interaction --no-progress
  - pwd
  - ls -al
  - cat .env
  - bin/console doctrine:database:create --if-not-exists --verbose
  - bin/console doctrine:schema:create --verbose

stages:
  - init
  - test
  - deploy

test:
  stage: test
  script:
    - vendor/bin/phpunit
  tags:
    - docker
    
dev:
  stage: deploy
  script:
    - echo "Deploy"
  tags:
    - docker